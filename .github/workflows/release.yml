name: .Net5 CI/CD
on: 
  push:
    tags:
      - 'v*'

jobs:
  test:
    name: Debug Build & Test
    runs-on: windows-latest
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core 5.0.*
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.*
    - name: Build
      run: dotnet build -c Debug
    - name: Test
      run: dotnet test

  release:
    name: Create Github Release
    if: contains(github.ref, 'tags/v')
    needs: [test]
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{steps.create_release.outputs.upload_url}}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: true

  publish:
    if: contains(github.ref, 'tags/v')
    needs: [test, release]
    runs-on: windows-latest
    strategy:
      matrix:
        rid: [win-x64, win-x86]
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      NUGET_XMLDOC_MODE: skip
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET 5.0
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.*    
    - name: Cache ffmpeg
      id: cache-ffmpeg
      uses: actions/cache@v2
      env:
        cache-name: cache-ffmpeg
      with:
        path: ffmpeg
        key: ${{ runner.os }}-ffmpegbin-4.3.1-v0
    - name:  Download ffmpeg
      if: steps.cache-ffmpeg.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        mkdir tmp -force
        mkdir ffmpeg/bin
        cd tmp
        $ProgressPreference = 'SilentlyContinue'
        Invoke-WebRequest https://github.com/BtbN/FFmpeg-Builds/releases/download/autobuild-2021-02-08-12-47/ffmpeg-n4.3.1-221-gd08bcbffff-win64-gpl-4.3.zip -o ffbin.zip
        Expand-Archive ffbin.zip -Force
        $item = Get-Childitem -Recurse -Filter ffmpeg.exe
        cd ..
        move $item[0].Fullname ./ffmpeg/bin
        del tmp -r
        
    - name: Build
      shell: powershell
      run: |
        dotnet publish ./Niconicome/Niconicome.csproj  -c Release -r ${{matrix.rid}} -p:PublishSingleFile=true --self-contained true  -o ${{ matrix.rid }}
        Copy-Item -Recurse ffpeg/bin ${{ matrix.rid }}
        Compress-Archive -Path ${{ matrix.rid }} -DestinationPath ${{ matrix.rid }}.zip -CompressionLevel fastest
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./${{ matrix.rid }}.zip
        asset_name: niconicome-${{ matrix.rid }}.zip
        asset_content_type: application/zip
