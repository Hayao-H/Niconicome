@page "/video/{NiconicoID}/";
@inject Niconicome.ViewModels.Mainpage.Tabs.VideoList.Pages.VideoDetailViewModel DataContext;
@inject IJSRuntime JS;

@using System.Threading;

@if (DataContext.VideoInfo is not null)
{
    <h3>@(DataContext.VideoInfo.Title)</h3>

    @if (DataContext.CanPlay.Value)
    {
        <div class="VideoElement">
            <video-js id="video-player" controls>
                <source src="http://localhost:2580/niconicome/hls/playlist.m3u8" type="application/x-mpegURL" />
            </video-js>
        </div>
    }
}

<div>
    <button class="btn btn-primary" @onclick="DataContext.OnReturnButtonClick">戻る</button>
</div>

@code {

    [Parameter]
    public string NiconicoID { get; set; } = string.Empty;

    private SynchronizationContext? _context;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        this._context = SynchronizationContext.Current;

        DataContext.Bindables.RegisterPropertyChangeHandler(() =>
        {
            this._context?.Post(_ => this.StateHasChanged(), null);
        });

        DataContext.Initialize(this.NiconicoID);

        this.StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (DataContext.CanPlay.Value)
        {
            await JS.InvokeVoidAsync("initializeVideo");
        }
    }
}
