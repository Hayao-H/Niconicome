@page "/video/{NiconicoID}/";
@inject Niconicome.ViewModels.Mainpage.Tabs.VideoList.Pages.VideoDetailViewModel DataContext;
@inject IJSRuntime JS;
@inject NavigationManager nm;
@inherits BlazorBase;

@using System.Threading;

<div class="VideoDetailPage">
    @if (!string.IsNullOrEmpty(DataContext.JsWatchInfo.Value))
    {
        <div id="jsWatchInfo" data-js-watch-info="@DataContext.JsWatchInfo.Value" hidden=""></div>
        <div id="watchApp">読み込み中...</div>
    }

    <div class="ControlsContainer">
        <button class="btn btn-primary" @onclick="DataContext.OnReturnButtonClick">戻る</button>
    </div>
</div>

@code {

    [Parameter]
    public string NiconicoID { get; set; } = string.Empty;

    private SynchronizationContext? _context;

    private IJSObjectReference? _module;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        this._context = SynchronizationContext.Current;

        DataContext.Bindables.RegisterPropertyChangeHandler(() =>
        {
            this._context?.Post(_ => this.StateHasChanged(), null);
        });

        DataContext.Initialize(this.NiconicoID);


        this.StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        this._module = await JS.InvokeAsync<IJSObjectReference>("import", "/script/Pages/VideoList/detail/main.js");
        if (firstRender && this._module is not null)
        {
            await this._module.InvokeVoidAsync("main");
        }
    }
}
