<Window x:Class="Niconicome.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:vm="clr-namespace:Niconicome.ViewModels.Mainpage"
        xmlns:cv="clr-namespace:Niconicome.Views.Converter"
        xmlns:tree="clr-namespce:Niconicome.Models.Playlist"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:prism="http://prismlibrary.com/"  
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignLightForeground}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignBackground}"
        FontFamily="Yu Gothic"
        WindowStartupLocation="CenterScreen"
        Style="{StaticResource Window_Style}"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Title="Niconicome" Height="850" Width="1600">
    <i:Interaction.Behaviors>
        <vm:MainWindowBehavior/>
    </i:Interaction.Behaviors>
    <Window.Resources>
        <cv:BooleanCircleConverter x:Key="BooleanCircleConverter"/>
    </Window.Resources>
    <materialDesign:DialogHost Identifier="default">
        <DockPanel>
            <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}" >
                <materialDesign:DrawerHost.LeftDrawerContent>
                    <Grid Width="250">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3*"/>
                            <RowDefinition Height="17*"/>
                        </Grid.RowDefinitions>
                        <materialDesign:ColorZone materialDesign:ShadowAssist.ShadowDepth="Depth1" Padding="8" >
                            <StackPanel Orientation="Vertical">
                                <DockPanel>
                                    <Image Source="{Binding UserImage}" Height="40"  Margin="5 0">
                                        <i:Interaction.Behaviors>
                                            <vm:UserImageBehavior/>
                                        </i:Interaction.Behaviors>
                                    </Image>
                                    <TextBlock Text="{Binding Username}" Style="{DynamicResource MaterialDesignBody1TextBlock}" VerticalAlignment="Center" />
                                </DockPanel>
                                <Button Content="{Binding LoginBtnVal}"  Command="{Binding LoginCommand}" Margin="8 10" ToolTip="{Binding LoginBtnTooltip}"/>
                            </StackPanel>
                        </materialDesign:ColorZone>
                        <StackPanel Grid.Row="1" HorizontalAlignment="Stretch">
                            <MenuItem Header="設定" HorizontalContentAlignment="Left"  Height="40" Command="{Binding OpenSettingCommand}" >
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="CogOutline"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="ダウンロード" HorizontalContentAlignment="Left"  Height="40"   Command="{Binding OpenDownloadTaskWindowsCommand}">
                                <MenuItem.Icon>
                                    <materialDesign:PackIcon Kind="Download"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </StackPanel>
                    </Grid>
                </materialDesign:DrawerHost.LeftDrawerContent>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="17*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column= "0" Background="{DynamicResource  MaterialDesignSnackbarBackground}">
                        <Grid.DataContext>
                            <vm:PlaylistTreeViewModel/>
                        </Grid.DataContext>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="16*"/>
                        </Grid.RowDefinitions>
                        <DockPanel Grid.Row="0">
                            <Button Width="auto" Margin="6" HorizontalAlignment="Left" Command="{Binding PlaylistRefreshcommand}" ToolTip="プレイリストを更新する">
                                <materialDesign:PackIcon Kind="Refresh" />
                            </Button>
                        </DockPanel>
                        <TreeView Foreground="{DynamicResource MaterialDesignBody}" ItemsSource="{Binding PlaylistTree}" Grid.Row="1" >
                            <i:Interaction.Behaviors>
                                <vm:PlaylistTreeBehavior/>
                            </i:Interaction.Behaviors>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate DataType="tree:ITreePlaylistInfo" ItemsSource="{Binding Children}">
                                    <StackPanel>
                                        <Grid Background="{Binding BackgroundColor}">
                                            <Grid.ToolTip>
                                                <TextBlock Text="{Binding Videos.Count,StringFormat={}{0}件の動画}"/>
                                            </Grid.ToolTip>
                                            <Separator BorderThickness="1" Visibility="{Binding BeforeSeparatorVisibility,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" BorderBrush="#000"/>
                                            <TextBlock Foreground="{DynamicResource MaterialDesignSnackbarRipple}" Text="{Binding Name}"/>
                                            <Separator BorderThickness="1" Visibility="{Binding AfterSeparatorVisibility,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" BorderBrush="#000"/>
                                        </Grid>
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                    <Setter Property="Tag" Value="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=TreeView, Mode=FindAncestor}}"/>
                                    <Setter Property="ContextMenu">
                                        <Setter.Value>
                                            <ContextMenu StaysOpen="False" DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}" >
                                                <MenuItem Header="プレイリストを追加する"
                                                  Command="{Binding AddPlaylist}"
                                                  CommandParameter="{Binding  Path=PlacementTarget.DataContext.Id, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                                    <MenuItem.Icon>
                                                        <materialDesign:PackIcon Kind="Plus"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <MenuItem Header="このプレイリストを削除する"
                                                  Command="{Binding RemovePlaylist}"
                                                  CommandParameter="{Binding  Path=PlacementTarget.DataContext.Id, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                                    <MenuItem.Icon>
                                                        <materialDesign:PackIcon Kind="Delete"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                                <MenuItem Header="このプレイリストを編集する"
                                                  Command="{Binding EditPlaylistCommand}"
                                                  CommandParameter="{Binding  Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                                    <MenuItem.Icon>
                                                        <materialDesign:PackIcon Kind="Edit"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </ContextMenu>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                </Style>
                            </TreeView.ItemContainerStyle>
                        </TreeView>
                    </Grid>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1*"/>
                            <RowDefinition Height="19*"/>
                        </Grid.RowDefinitions>
                        <DockPanel >
                            <ToggleButton Margin="10 0" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignHamburgerToggleButton}" x:Name="MenuToggleButton" Foreground="{DynamicResource MaterialDesignBody}"/>
                            <DockPanel HorizontalAlignment="Right">
                                <Button Margin="10,0" Grid.Column="0" Width="60" VerticalAlignment="Center" ToolTip="アプリケーション設定" Command="{Binding OpenSettingCommand}">
                                    <materialDesign:PackIcon Kind="cog">
                                        <materialDesign:PackIcon.RenderTransform>
                                            <ScaleTransform CenterY="8" CenterX="7" ScaleX="1.7" ScaleY="1.7"/>
                                        </materialDesign:PackIcon.RenderTransform>
                                    </materialDesign:PackIcon>
                                </Button>
                            </DockPanel>
                        </DockPanel>
                        <Grid Grid.Row="1" x:Name="videoList" d:DataContext="{d:DesignInstance {x:Type vm:VideoListViewModelD},IsDesignTimeCreatable=True}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>
                            <UserControl prism:RegionManager.RegionName="VideoListRegion"/>
                            <TabControl Background="{DynamicResource MaterialDesignBackground}" Grid.Row="1" Margin="8">
                                <TabControl.Resources>
                                    <Style TargetType="TabItem">
                                        <Setter Property="Foreground" Value="Black"/>
                                    </Style>
                                </TabControl.Resources>
                                <TabItem Header="設定" d:DataContext="{d:DesignInstance {x:Type vm:DownloadSettingsViewModelD},IsDesignTimeCreatable=True}">
                                    <StackPanel Orientation="Vertical" x:Name="downloadSettings">
                                        <StackPanel.Resources>
                                            <Style TargetType="{x:Type Label}">
                                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                                            </Style>
                                            <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource MaterialDesignComboBox}">
                                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                                            </Style>
                                            <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MaterialDesignCheckBox}">
                                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                                            </Style>
                                        </StackPanel.Resources>
                                        <Grid Margin="0 5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="61*"/>
                                                <ColumnDefinition Width="1277*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <Label Content="ダウンロードする項目" Grid.ColumnSpan="2" Margin="0,0,0,30" Grid.RowSpan="2"/>
                                            <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.ColumnSpan="2">
                                                <CheckBox Margin="5 0" Content="動画" IsChecked="{Binding IsDownloadingVideoEnable,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                                <CheckBox Margin="5 0" Content="コメント" IsChecked="{Binding IsDownloadingCommentEnable,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                                <CheckBox Margin="5 0" Content="過去ログ" IsChecked="{Binding IsDownloadingCommentLogEnable,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                                <CheckBox Margin="5 0" Content="投稿者コメント" IsChecked="{Binding IsDownloadingOwnerComment,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                                <CheckBox Margin="5 0" Content="かんたんコメント" IsChecked="{Binding IsDownloadingEasyComment,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                                <CheckBox Margin="5 0" Content="サムネイル" IsChecked="{Binding IsDownloadingThumbEnable,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                                <CheckBox Margin="5 0" Content="動画情報" IsChecked="{Binding IsDownloadingVideoInfoEnable,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                                <CheckBox Margin="5 0" Content="コメント取得数を制限" IsChecked="{Binding IsLimittingCommentCountEnable,UpdateSourceTrigger=PropertyChanged}" x:Name="limitComments"/>
                                                <TextBox Margin="5 0" materialDesign:HintAssist.Hint="最大コメント数（数値）" Text="{Binding MaxCommentsCount,UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding ElementName=limitComments,Path=IsChecked,Converter={StaticResource BooleanToVisibilityConverter}}" Width="150" HorizontalContentAlignment="Right"/>
                                            </StackPanel>
                                        </Grid>
                                        <Separator/>
                                        <StackPanel Margin="0 5" Orientation="Horizontal">
                                            <Label Content="優先解像度:" Margin="0 0 5 0"/>
                                            <ComboBox ItemsSource="{Binding Resolutions}" DisplayMemberPath="DisplayValue" SelectedItem="{Binding SelectedResolution,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                        </StackPanel>
                                        <Separator/>
                                        <Grid Margin="0 5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="auto"/>
                                                <RowDefinition Height="auto"/>
                                            </Grid.RowDefinitions>
                                            <Label Content="オプション"/>
                                            <DockPanel  Grid.Row="1">
                                                <CheckBox Margin="5 0" Content="同名時に上書き" IsChecked="{Binding IsOverwriteEnable,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                                <CheckBox Margin="5 0" Content="ダウンロード済をスキップ" IsChecked="{Binding IsSkippingEnable,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                                <CheckBox Margin="5 0" Content="ファイルを別フォルダーからコピー" IsChecked="{Binding IsCopyFromAnotherFolderEnable,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                                <DockPanel HorizontalAlignment="Right">
                                                    <Button Content="ステージ" HorizontalAlignment="Right" Margin="10 0" Command="{Binding StageVideosCommand}"/>
                                                    <Button Content="中断" HorizontalAlignment="Right" Margin="10 0" Command="{Binding CancelCommand}"/>
                                                    <Button Content="ダウンロード" HorizontalAlignment="Right" Margin="10 0" Command="{Binding DownloadCommand}"/>
                                                </DockPanel>
                                            </DockPanel>
                                        </Grid>
                                        <ProgressBar Margin="2 5" IsIndeterminate="{Binding IsDownloading,UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"/>
                                    </StackPanel>
                                </TabItem>
                                <TabItem Header="出力">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="2*"/>
                                            <RowDefinition Height="5*"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Orientation="Horizontal">
                                            <Button Width="auto" Margin="4" Command="{Binding ClearMessageCommand}" ToolTip="出力をクリアする">
                                                <materialDesign:PackIcon Kind="Delete"/>
                                            </Button>
                                            <Button Width="auto" Margin="4" Command="{Binding CopyMessageCommand}" ToolTip="出力内容をクリップボードにコピーする">
                                                <materialDesign:PackIcon Kind="Clipboard"/>
                                            </Button>
                                            <Button Width="auto" Margin="4" Command="{Binding OpenLogWindowCommand}" ToolTip="出力内容を別ウィンドウで開く">
                                                <materialDesign:PackIcon Kind="DockWindow"/>
                                            </Button>
                                        </StackPanel>
                                        <TextBox Grid.Row="1" Text="{Binding Message,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Padding="4" IsReadOnly="True"
                                         BorderThickness="0 1 0 0" Foreground="{DynamicResource MaterialDesignBody}" TextWrapping="Wrap"/>
                                    </Grid>
                                </TabItem>
                            </TabControl >
                        </Grid>
                    </Grid>
                </Grid>
            </materialDesign:DrawerHost>
        </DockPanel>
    </materialDesign:DialogHost>
</Window>
