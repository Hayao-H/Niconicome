@page "/settings/videolist";

@using Niconicome.Views.Setting.V2.Shared;
@inherits BlazorBase;

@inject IJSRuntime JS;
@inject VM::Setting.V2.Page.VideoListViewModel DataContext;

<div class="SettingPage ImportPage">
    <div class="SideMenu">
        <SideMenu />
    </div>
    <div class="Body">

        <h3>動画リスト設定</h3>

        <div class="SettingContent">
            <p class="Title"><i class="Icon fa-solid fa-computer-mouse"></i>動画をダブルクリックしたときのアクション</p>
            <select class="form-select Select" @bind="DataContext.VideodbClickAction.Value">
                @foreach (var s in DataContext.SelectableVideodbClickAction)
                {
                    <option value="@s.Value">@s.DidplayValue</option>
                }
            </select>
        </div>

        <div class="SettingContent">
            <p class="Title"><i class="Icon fa-solid fa-computer-mouse"></i>動画を中クリックしたときのアクション</p>
            <select class="form-select Select" @bind="DataContext.VideoMiddleClickAction.Value">
                @foreach (var s in DataContext.SelectableVideoMiddleClickAction)
                {
                    <option value="@s.Value">@s.DidplayValue</option>
                }
            </select>
        </div>

        <div class="SettingContent">
            <label class="Title" for="columnWIdth"><i class="Icon fa-solid fa-clock-rotate-left"></i>起動時にカラム幅を復元しない</label>
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" id="columnWIdth" @bind="DataContext.IsRestoreingColumnWidthDisabled.Value">
            </div>
        </div>

        <div class="SettingContent">
            <label class="Title" for="dlSucceeded"><i class="Icon fa-solid fa-check"></i>DL成功履歴を表示・保持しない</label>
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" id="dlSucceeded" @bind="DataContext.IsDownloadSucceededHistoryDisabled.Value">
            </div>
        </div>

        <div class="SettingContent">
            <label class="Title" for="dlFailed"><i class="Icon fa-solid fa-xmark"></i>DL失敗履歴を表示・保持しない</label>
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" id="dlFailed" @bind="DataContext.IsDownloadFailedHistoryDisabled.Value">
            </div>
        </div>

        <div class="SettingContent">
            <label class="Title" for="playback"><i class="Icon fa-solid fa-play"></i>再生履歴を表示・保持しない</label>
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" id="playback" @bind="DataContext.IsPlaybackHistoryDisabled.Value">
            </div>
        </div>

        <div class="SettingContent">
            <label class="Title" for="autoDL"><i class="Icon fa-solid fa-download"></i>動画追加時に自動でダウンロードを開始</label>
            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" id="autoDL" @bind="DataContext.IsAutoDownloadEnable.Value">
            </div>
        </div>

    </div>
</div>

@code {
    private SynchronizationContext? ctx;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        this.ctx = SynchronizationContext.Current;
        DataContext.Bindables.RegisterPropertyChangeHandler(() =>
        {
            this.ctx?.Post(_ => this.StateHasChanged(), null);
        });
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
    }
}
