<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    mc:Ignorable="d"
                    xmlns:tabs="clr-namespace:Niconicome.ViewModels.Mainpage.Tabs"
                    xmlns:interactivity="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
                    >
    <Style TargetType="TabItem" x:Key="TabStyle">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Header" Value="{Binding DataContext.Title}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid d:DataContext="{d:DesignInstance tabs:TabViewModelBaseD,IsDesignTimeCreatable=True}">
                        <Border Name="Border" 
                                Margin="2" 
                                Background="#e7e7e7" 
                                BorderThickness="1" 
                                Padding="8 4"
                                CornerRadius="8">
                            <DockPanel>
                                <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              Content="{TemplateBinding Header}"
                                              >
                                </ContentPresenter>
                                <Grid Background="Transparent" Visibility="{Binding DataContext.CanClose.Value,Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <materialDesign:PackIcon Kind="Close" Margin="8 0 0 0">
                                        <materialDesign:PackIcon.RenderTransform>
                                            <TranslateTransform Y="2"/>
                                        </materialDesign:PackIcon.RenderTransform>
                                        <materialDesign:PackIcon.Style>
                                            <Style TargetType="materialDesign:PackIcon">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor,AncestorLevel=1}}" Value="True">
                                                        <Setter Property="Foreground" Value="Red"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </materialDesign:PackIcon.Style>
                                    </materialDesign:PackIcon>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseLeftButtonDown">
                                            <interactivity:EventToReactiveCommand Command="{Binding DataContext.CloseCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Grid>
                            </DockPanel>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#e7e7e7"/>
                            <Setter TargetName="Border" Property="Background" Value="#fff"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="Background" Value="#f6f6f6"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>